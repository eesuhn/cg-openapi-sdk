# coding: utf-8

"""
    CoinGecko API

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: v3.1.1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from coingecko_python.models.trending_search import TrendingSearch

class TestTrendingSearch(unittest.TestCase):
    """TrendingSearch unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> TrendingSearch:
        """Test TrendingSearch
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `TrendingSearch`
        """
        model = TrendingSearch()
        if include_optional:
            return TrendingSearch(
                coins = [
                    coingecko_python.models.trending_search_coins_inner.TrendingSearch_coins_inner(
                        id = '', 
                        coin_id = 1.337, 
                        name = '', 
                        symbol = '', 
                        market_cap_rank = 1.337, 
                        thumb = '', 
                        small = '', 
                        large = '', 
                        slug = '', 
                        price_btc = 1.337, 
                        score = 1.337, 
                        data = coingecko_python.models.trending_search_coins_inner_data.TrendingSearch_coins_inner_data(
                            price = 1.337, 
                            price_btc = '', 
                            price_change_percentage_24h = coingecko_python.models.trending_search_coins_inner_data_price_change_percentage_24h.TrendingSearch_coins_inner_data_price_change_percentage_24h(
                                btc = 1.337, 
                                usd = 1.337, ), 
                            market_cap = '', 
                            market_cap_btc = '', 
                            total_volume = '', 
                            total_volume_btc = '', 
                            sparkline = '', 
                            content = '', ), )
                    ],
                nfts = [
                    coingecko_python.models.trending_search_nfts_inner.TrendingSearch_nfts_inner(
                        id = '', 
                        name = '', 
                        symbol = '', 
                        thumb = '', 
                        nft_contract_id = 1.337, 
                        native_currency_symbol = '', 
                        floor_price_in_native_currency = 1.337, 
                        floor_price_24h_percentage_change = 1.337, 
                        data = coingecko_python.models.trending_search_nfts_inner_data.TrendingSearch_nfts_inner_data(
                            floor_price = '', 
                            floor_price_in_usd_24h_percentage_change = '', 
                            h24_volume = '', 
                            h24_average_sale_price = '', 
                            sparkline = '', 
                            content = '', ), )
                    ],
                categories = [
                    coingecko_python.models.trending_search_categories_inner.TrendingSearch_categories_inner(
                        id = 1.337, 
                        name = '', 
                        market_cap_1h_change = 1.337, 
                        slug = '', 
                        coins_count = 1.337, 
                        data = coingecko_python.models.trending_search_categories_inner_data.TrendingSearch_categories_inner_data(
                            market_cap = 1.337, 
                            market_cap_btc = 1.337, 
                            total_volume = 1.337, 
                            total_volume_btc = 1.337, 
                            market_cap_change_percentage_24h = coingecko_python.models.trending_search_categories_inner_data_market_cap_change_percentage_24h.TrendingSearch_categories_inner_data_market_cap_change_percentage_24h(
                                btc = 1.337, 
                                usd = 1.337, ), 
                            sparkline = '', ), )
                    ]
            )
        else:
            return TrendingSearch(
        )
        """

    def testTrendingSearch(self):
        """Test TrendingSearch"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
