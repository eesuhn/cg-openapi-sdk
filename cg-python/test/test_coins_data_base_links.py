# coding: utf-8

"""
    CoinGecko API

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: v3.1.1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from coingecko_python.models.coins_data_base_links import CoinsDataBaseLinks

class TestCoinsDataBaseLinks(unittest.TestCase):
    """CoinsDataBaseLinks unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> CoinsDataBaseLinks:
        """Test CoinsDataBaseLinks
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `CoinsDataBaseLinks`
        """
        model = CoinsDataBaseLinks()
        if include_optional:
            return CoinsDataBaseLinks(
                homepage = [
                    ''
                    ],
                whitepaper = [
                    ''
                    ],
                blockchain_site = [
                    ''
                    ],
                official_forum_url = [
                    ''
                    ],
                chat_url = [
                    ''
                    ],
                announcement_url = [
                    ''
                    ],
                snapshot_url = '',
                twitter_screen_name = '',
                facebook_username = '',
                bitcointalk_thread_identifier = '',
                telegram_channel_identifier = '',
                subreddit_url = '',
                repos_url = coingecko_python.models.coins_data_base_links_repos_url.CoinsDataBase_links_repos_url(
                    github = [
                        ''
                        ], 
                    bitbucket = [
                        ''
                        ], )
            )
        else:
            return CoinsDataBaseLinks(
        )
        """

    def testCoinsDataBaseLinks(self):
        """Test CoinsDataBaseLinks"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
