# coding: utf-8

"""
    CoinGecko API

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: v3.1.1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from coingecko_python.models.ohlcv import OHLCV

class TestOHLCV(unittest.TestCase):
    """OHLCV unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> OHLCV:
        """Test OHLCV
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `OHLCV`
        """
        model = OHLCV()
        if include_optional:
            return OHLCV(
                data = coingecko_python.models.ohlcv_data.OHLCV_data(
                    id = '', 
                    type = '', 
                    attributes = coingecko_python.models.ohlcv_data_attributes.OHLCV_data_attributes(
                        ohlcv_list = [
                            [
                                1.337
                                ]
                            ], ), ),
                meta = coingecko_python.models.ohlcv_meta.OHLCV_meta(
                    base = coingecko_python.models.ohlcv_meta_base.OHLCV_meta_base(
                        address = '', 
                        name = '', 
                        symbol = '', 
                        coingecko_coin_id = '', ), 
                    quote = coingecko_python.models.ohlcv_meta_base.OHLCV_meta_base(
                        address = '', 
                        name = '', 
                        symbol = '', 
                        coingecko_coin_id = '', ), )
            )
        else:
            return OHLCV(
        )
        """

    def testOHLCV(self):
        """Test OHLCV"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
