# coding: utf-8

"""
    CoinGecko API

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: v3.1.1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from coingecko-sdk.models.search import Search

class TestSearch(unittest.TestCase):
    """Search unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> Search:
        """Test Search
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `Search`
        """
        model = Search()
        if include_optional:
            return Search(
                coins = [
                    coingecko-sdk.models.search_coins_inner.Search_coins_inner(
                        id = '', 
                        name = '', 
                        api_symbol = '', 
                        symbol = '', 
                        market_cap_rank = 1.337, 
                        thumb = '', 
                        large = '', )
                    ],
                exchanges = [
                    coingecko-sdk.models.search_exchanges_inner.Search_exchanges_inner(
                        id = '', 
                        name = '', 
                        market_type = '', 
                        thumb = '', 
                        large = '', )
                    ],
                icos = [
                    ''
                    ],
                categories = [
                    coingecko-sdk.models.search_categories_inner.Search_categories_inner(
                        id = '', 
                        name = '', )
                    ],
                nfts = [
                    coingecko-sdk.models.search_nfts_inner.Search_nfts_inner(
                        id = '', 
                        name = '', 
                        symbol = '', 
                        thumb = '', )
                    ]
            )
        else:
            return Search(
        )
        """

    def testSearch(self):
        """Test Search"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
